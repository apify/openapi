get:
  tags:
    - Webhooks
  summary: Get webhook
  description: Gets webhook object with all details.
  operationId: GetWebhook
  parameters:
    - name: webhookId
      in: path
      description: Webhook ID.
      required: true
      style: simple
      schema:
        type: string
        example: Zib4xbZsmvZeK55ua
    - name: token
      in: query
      description: API authentication token.
      required: true
      style: form
      explode: true
      schema:
        type: string
        example: soSkq9ekdmfOslopH
  responses:
    '200':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            allOf:
              - $ref: ../../components/schemas/webhooks/GetWebhookResponse.yaml
              - example:
                  data:
                    id: YiKoxjkaS9gjGTqhF
                    createdAt: '2019-12-12T07:34:14.202Z'
                    modifiedAt: '2019-12-13T08:36:13.202Z'
                    userId: wRsJZtadYvn4mBZmm
                    isAdHoc: false
                    shouldInterpolateStrings: false
                    eventTypes:
                      - ACTOR.RUN.SUCCEEDED
                    condition:
                      actorId: hksJZtadYvn4mBuin
                      actorTaskId: asdLZtadYvn4mBZmm
                      actorRunId: hgdKZtadYvn4mBpoi
                    ignoreSslErrors: false
                    doNotRetry: false
                    requestUrl: 'http://example.com/'
                    payloadTemplate: '{\n \"userId\": {{userId}}...'
                    headersTemplate: '{\n \"Authorization\": Bearer...'
                    description: this is webhook description
                    lastDispatch:
                      status: SUCCEEDED
                      finishedAt: '2019-12-13T08:36:13.202Z'
                    stats:
                      totalDispatches: 1
          example:
            data:
              id: YiKoxjkaS9gjGTqhF
              createdAt: '2019-12-12T07:34:14.202Z'
              modifiedAt: '2019-12-13T08:36:13.202Z'
              userId: wRsJZtadYvn4mBZmm
              isAdHoc: false
              shouldInterpolateStrings: false
              eventTypes:
                - ACTOR.RUN.SUCCEEDED
              condition:
                actorId: hksJZtadYvn4mBuin
                actorTaskId: asdLZtadYvn4mBZmm
                actorRunId: hgdKZtadYvn4mBpoi
              ignoreSslErrors: false
              doNotRetry: false
              requestUrl: 'http://example.com/'
              payloadTemplate: '{\n \"userId\": {{userId}}...'
              headersTemplate: '{\n \"Authorization\": Bearer...'
              description: this is webhook description
              lastDispatch:
                status: SUCCEEDED
                finishedAt: '2019-12-13T08:36:13.202Z'
              stats:
                totalDispatches: 1
  deprecated: false
put:
  tags:
    - Webhooks
  summary: Update webhook
  description: >-
    Updates a webhook using values specified by a webhook object passed as JSON
    in the POST payload.

    If the object does not define a specific property, its value will not be
    updated.


    The response is the full webhook object as returned by the

    [Get webhook](#reference/webhooks/webhook-object/get-webhook) endpoint.


    The request needs to specify the `Content-Type: application/json` HTTP
    header!


    When providing your API authentication token, we recommend using the
    request's `Authorization` header, rather than the URL. ([More
    info](#introduction/authentication)).
  operationId: UpdateWebhook
  parameters:
    - name: webhookId
      in: path
      description: Webhook ID.
      required: true
      style: simple
      schema:
        type: string
        example: Zib4xbZsmvZeK55ua
    - name: token
      in: query
      description: API authentication token.
      required: true
      style: form
      explode: true
      schema:
        type: string
        example: soSkq9ekdmfOslopH
  requestBody:
    description: ''
    content:
      application/json:
        schema:
          allOf:
            - $ref: ../../components/schemas/webhooks/WebhookUpdate.yaml
            - example:
                isAdHoc: false
                eventTypes:
                  - ACTOR.RUN.SUCCEEDED
                condition:
                  actorTaskId: asdLZtadYvn4mBZmm
                ignoreSslErrors: false
                doNotRetry: false
                requestUrl: 'http://example.com/'
                payloadTemplate: '{\n \"userId\": {{userId}}...'
                headersTemplate: '{\n \"Authorization\": Bearer...'
                description: this is webhook description
                shouldInterpolateStrings: false
        example:
          isAdHoc: false
          eventTypes:
            - ACTOR.RUN.SUCCEEDED
          condition:
            actorTaskId: asdLZtadYvn4mBZmm
          ignoreSslErrors: false
          doNotRetry: false
          requestUrl: 'http://example.com/'
          payloadTemplate: '{\n \"userId\": {{userId}}...'
          headersTemplate: '{\n \"Authorization\": Bearer...'
          description: this is webhook description
          shouldInterpolateStrings: false
    required: true
  responses:
    '200':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            allOf:
              - $ref: ../../components/schemas/webhooks/UpdateWebhookResponse.yaml
              - example:
                  data:
                    id: YiKoxjkaS9gjGTqhF
                    createdAt: '2019-12-12T07:34:14.202Z'
                    modifiedAt: '2019-12-13T08:36:13.202Z'
                    userId: wRsJZtadYvn4mBZmm
                    isAdHoc: false
                    shouldInterpolateStrings: false
                    eventTypes:
                      - ACTOR.RUN.SUCCEEDED
                    condition:
                      actorId: hksJZtadYvn4mBuin
                      actorTaskId: asdLZtadYvn4mBZmm
                      actorRunId: hgdKZtadYvn4mBpoi
                    ignoreSslErrors: false
                    doNotRetry: false
                    requestUrl: 'http://example.com/'
                    payloadTemplate: '{\n \"userId\": {{userId}}...'
                    headersTemplate: '{\n \"Authorization\": Bearer...'
                    description: this is webhook description
                    lastDispatch:
                      status: SUCCEEDED
                      finishedAt: '2019-12-13T08:36:13.202Z'
                    stats:
                      totalDispatches: 1
          example:
            data:
              id: YiKoxjkaS9gjGTqhF
              createdAt: '2019-12-12T07:34:14.202Z'
              modifiedAt: '2019-12-13T08:36:13.202Z'
              userId: wRsJZtadYvn4mBZmm
              isAdHoc: false
              shouldInterpolateStrings: false
              eventTypes:
                - ACTOR.RUN.SUCCEEDED
              condition:
                actorId: hksJZtadYvn4mBuin
                actorTaskId: asdLZtadYvn4mBZmm
                actorRunId: hgdKZtadYvn4mBpoi
              ignoreSslErrors: false
              doNotRetry: false
              requestUrl: 'http://example.com/'
              payloadTemplate: '{\n \"userId\": {{userId}}...'
              headersTemplate: '{\n \"Authorization\": Bearer...'
              description: this is webhook description
              lastDispatch:
                status: SUCCEEDED
                finishedAt: '2019-12-13T08:36:13.202Z'
              stats:
                totalDispatches: 1
  deprecated: false
delete:
  tags:
    - Webhooks
  summary: Delete webhook
  description: Deletes a webhook.
  operationId: DeleteWebhook
  parameters:
    - name: webhookId
      in: path
      description: Webhook ID.
      required: true
      style: simple
      schema:
        type: string
        example: Zib4xbZsmvZeK55ua
    - name: token
      in: query
      description: API authentication token.
      required: true
      style: form
      explode: true
      schema:
        type: string
        example: soSkq9ekdmfOslopH
  responses:
    '204':
      description: ''
      headers: {}
      content:
        application/json:
          schema:
            type: object
            example: {}
          example: {}
  deprecated: false
